{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","inputs","stateMutability","type","name","outputs","internalType","App","useState","owner","setOwner","numberOfPlayers","setNumberOfPlayers","totalAmount","setTotalAmount","inTransaction","setInTransaction","useEffect","lottery","methods","call","then","getNumberOfPlayers","getBalance","options","address","wei","utils","fromWei","onSubmit","e","a","preventDefault","getAccounts","accounts","enter","send","from","value","toWei","onClick","pickWinner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2eAEAA,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAElC,IAEeC,EAFF,IAAIC,IAAKL,OAAOC,UCmEd,MAAIG,EAAKE,IAAIC,SAnEhB,CACV,CACEC,OAAQ,GACRC,gBAAiB,aACjBC,KAAM,eAER,CACEF,OAAQ,GACRG,KAAM,QACNC,QAAS,GACTH,gBAAiB,UACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,qBACNC,QAAS,CACP,CACEC,aAAc,UACdF,KAAM,GACND,KAAM,YAGVD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACEC,aAAc,UACdF,KAAM,GACND,KAAM,YAGVD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,aACNC,QAAS,GACTH,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CACEK,aAAc,UACdF,KAAM,GACND,KAAM,YAGVC,KAAM,UACNC,QAAS,CACP,CACEC,aAAc,UACdF,KAAM,GACND,KAAM,YAGVD,gBAAiB,OACjBC,KAAM,aAjEM,8C,QC+DDI,EA7DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAE8BF,mBAAS,GAFvC,mBAETG,EAFS,KAEQC,EAFR,OAGsBJ,mBAAS,IAH/B,mBAGTK,EAHS,KAGIC,EAHJ,OAI0BN,oBAAS,GAJnC,mBAITO,EAJS,KAIMC,EAJN,KAMhBC,qBAAU,WACRC,EAAQC,QAAQV,QAAQW,OAAOC,KAAKX,GACpCQ,EAAQC,QAAQG,qBAAqBF,OAAOC,KAAKT,GACjDf,EAAKE,IACFwB,WAAWL,EAAQM,QAAQC,SAC3BJ,MAAK,SAACK,GAAD,OAASZ,EAAejB,EAAK8B,MAAMC,QAAQF,EAAK,eACvD,IAEH,IAAMG,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfD,EAAEE,iBADa,SAGQnC,EAAKE,IAAIkC,cAHjB,cAGTC,EAHS,OAKflB,GAAiB,GALF,kBAQPE,EAAQC,QAAQgB,QAAQC,KAAK,CACjCC,KAAMH,EAAS,GACfI,MAAOzC,EAAK8B,MAAMY,MAAM,WAVb,iEAcfvB,GAAiB,GAdF,0DAAH,sDAiBRwB,EAAO,uCAAG,WAAOV,GAAP,eAAAC,EAAA,sEACSlC,EAAKE,IAAIkC,cADlB,cACRC,EADQ,gBAGRhB,EAAQC,QAAQsB,aAAaL,KAAK,CACtCC,KAAMH,EAAS,KAJH,2CAAH,sDAQb,OACE,qCACE,yDACA,2DAA8BzB,KAC9B,uBACA,sDACwBE,EADxB,uCAEME,EAFN,aAIA,uBACCE,GAAiB,qEAClB,uBAAMc,SAAUA,EAAhB,UACE,gDACA,+DAEF,uBACA,sDACA,wBAAQW,QAASA,EAAjB,+BChDSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.719467cf.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;","import web3 from \"./web3\";\n\nconst address = \"0xEE7F2cD64543fe47BE2cae452510131b829D60fd\";\n\nconst abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNumberOfPlayers\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"players\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import { useState, useEffect } from \"react\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nconst App = () => {\n  const [owner, setOwner] = useState(\"\");\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(\"\");\n  const [inTransaction, setInTransaction] = useState(false);\n\n  useEffect(() => {\n    lottery.methods.owner().call().then(setOwner);\n    lottery.methods.getNumberOfPlayers().call().then(setNumberOfPlayers);\n    web3.eth\n      .getBalance(lottery.options.address)\n      .then((wei) => setTotalAmount(web3.utils.fromWei(wei, \"ether\")));\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    setInTransaction(true);\n\n    try {\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(\"0.001\"),\n      });\n    } catch (err) {}\n\n    setInTransaction(false);\n  };\n\n  const onClick = async (e) => {\n    const accounts = await web3.eth.getAccounts();\n\n    await lottery.methods.pickWinner().send({\n      from: accounts[0],\n    });\n  };\n\n  return (\n    <>\n      <h1>Welcome to the lottery!</h1>\n      <p>This lottery is owned by: {owner}</p>\n      <br />\n      <p>\n        Currently, there are {numberOfPlayers} in the race, for a whooping sum\n        of {totalAmount} ether!\n      </p>\n      <hr />\n      {inTransaction && <p>Waiting for transaction to finish...</p>}\n      <form onSubmit={onSubmit}>\n        <h4>Want to enter?</h4>\n        <button>Enter with 0.001 ether</button>\n      </form>\n      <hr />\n      <h4>Let's pick a winner!</h4>\n      <button onClick={onClick}>Pick a winner</button>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}